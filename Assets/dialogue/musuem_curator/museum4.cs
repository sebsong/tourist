/*
------------------------------------------------
Generated by Cradle 2.0.1.0
https://github.com/daterre/Cradle

Original file: museum4.html
Story format: Harlowe
------------------------------------------------
*/

using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using Cradle;
using IStoryThread = System.Collections.Generic.IEnumerable<Cradle.StoryOutput>;
using Cradle.StoryFormats.Harlowe;

public partial class @museum4: Cradle.StoryFormats.Harlowe.HarloweStory
{
	#region Variables
	// ---------------

	public class VarDefs: RuntimeVars
	{
		public VarDefs()
		{
		}

	}

	public new VarDefs Vars
	{
		get { return (VarDefs) base.Vars; }
	}

	// ---------------
	#endregion

	#region Initialization
	// ---------------

	public readonly Cradle.StoryFormats.Harlowe.HarloweRuntimeMacros macros1;

	@museum4()
	{
		this.StartPassage = "museum1";

		base.Vars = new VarDefs() { Story = this, StrictMode = true };

		macros1 = new Cradle.StoryFormats.Harlowe.HarloweRuntimeMacros() { Story = this };

		base.Init();
		passage1_Init();
		passage2_Init();
	}

	// ---------------
	#endregion

	// .............
	// #1: museum1

	void passage1_Init()
	{
		this.Passages[@"museum1"] = new StoryPassage(@"museum1", new string[]{  }, passage1_Main);
	}

	IStoryThread passage1_Main()
	{
		yield return text("The Museum owes you one--here’s your ‘backpack.’ I hope it helps you on your journey!");
		yield return lineBreak();
		yield return lineBreak();
		yield return link("space", "museum2", null);
		yield break;
	}


	// .............
	// #2: museum2

	void passage2_Init()
	{
		this.Passages[@"museum2"] = new StoryPassage(@"museum2", new string[]{ "end", }, passage2_Main);
	}

	IStoryThread passage2_Main()
	{
		yield return text("Just don’t tell those scholars we gave you that ‘backpack;’ they’d be quite upset with us…");
		yield return lineBreak();
		yield return lineBreak();
		yield return link("space", "museum1", null);
		yield break;
	}


}